{
  "name": "ua-parser",
  "description": "A port of Browserscope's user agent parser.",
  "main": "./js/index",
  "version": "0.3.1",
  "maintainers": [
    {
      "name": "Tobie Langel",
      "email": "tobie.langel@gmail.com",
      "url": "http://tobielangel.com"
    }
  ],
  "contributors": [
    {
      "name": "Tobie Langel",
      "email": "tobie.langel@gmail.com",
      "url": "http://tobielangel.com"
    },
    {
      "name": "Lindsey Simon",
      "email": "lsimon@commoner.com",
      "url": "http://www.idreamofuni.com"
    },
    {
      "name": "Philip Tellis",
      "email": "philip@bluesmoon.info",
      "url": "http://bluesmoon.info"
    },
    {
      "name": "Dave Olsen",
      "email": "dmolsen@gmail.com",
      "url": "http://dmolsen.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/tobie/ua-parser.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/tobie/ua-parser/master/js/LICENSE"
    },
    {
      "type": "Apache-2.0",
      "url": "https://raw.github.com/tobie/ua-parser/master/js/LICENSE"
    }
  ],
  "dependencies": {
    "yamlparser": ">=0.0.2"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "mocha -u tdd ./js/test/*.js"
  },
  "readme": "ua-parser [![Build Status](https://secure.travis-ci.org/tobie/ua-parser.png?branch=master)](https://travis-ci.org/tobie/ua-parser)\n=========\n\n`ua-parser` is a multi-language port of [BrowserScope][2]'s [user agent string parser][3].\n\nThe crux of the original parser--the data collected by [Steve Souders][4] over the years--has been extracted into a separate [YAML file][5] so as to be reusable _as is_ by implementations in other programming languages.\n\n`ua-parser` is just a small wrapper around this data.\n\n\nUsage :: [node.js][1]\n---------------------\n```js\nvar r = require('ua-parser').parse(navigator.userAgent);\n\nconsole.log(r.ua.toString());        // -> \"Safari 5.0.1\"\nconsole.log(r.ua.toVersionString()); // -> \"5.0.1\"\nconsole.log(r.ua.family)             // -> \"Safari\"\nconsole.log(r.ua.major);             // -> \"5\"\nconsole.log(r.ua.minor);             // -> \"0\"\nconsole.log(r.ua.patch);             // -> \"1\"\n\nconsole.log(r.os.toString());        // -> \"iOS 5.1\"\nconsole.log(r.os.toVersionString()); // -> \"5.1\"\nconsole.log(r.os.family)             // -> \"iOS\"\nconsole.log(r.os.major);             // -> \"5\"\nconsole.log(r.os.minor);             // -> \"1\"\nconsole.log(r.os.patch);             // -> null\n\nconsole.log(r.device.family);        // -> \"iPhone\"\n```\n\nNote if you're only interested in one of the `ua`, `device` or `os` objects, you will getter better performance by using the more specific methods (`uaParser.parseUA`, `uaParser.parseOS` and `uaParser.parseDevice` respectively), e.g.:\n\n```js\nvar p = require('ua-parser');\n\nconsole.log(p.parseUA(navigator.userAgent).toString());\n// -> \"Safari 5.0.1\"\nconsole.log(p.parseOS(navigator.userAgent).toString());\n// -> \"iOS 5.1\"\nconsole.log(p.parseDevice(navigator.userAgent).toString());\n// -> \"iPhone\"\n```\n\nUsage :: python\n---------------\n```python\n# Install this into python site_packages like so:\n#\n# python setup.py install\n#\n# Now you're good to go.\n\nfrom ua_parser import user_agent_parser\n\n# On the server, you could use a WebOB request object.\nuser_agent_string = request.META.get('HTTP_USER_AGENT')\n\n# For demonstration purposes, though an iPhone ...\nuser_agent_string = 'Mozilla/5.0 (iPhone; CPU iPhone OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B179 Safari/7534.48.3'\n\n# Get back a big dictionary of all the goodies.\nresult_dict = user_agent_parser.Parse(user_agent_string)\n\nprint result_dict['user_agent']\n# {'major': '5', 'minor': '1', 'family': 'Mobile Safari', 'patch': None}\n\nprint result_dict['os']\n# {'major': '5', 'patch_minor': None, 'minor': '1', 'family': 'iOS', 'patch': None}\n\nprint result_dict['device']\n# {'is_spider': False, 'is_mobile': True, 'family': 'iPhone'}\n```\n\n\nUsage :: java\n-------------\n```java\nimport ua_parser.Parser;\nimport ua_parser.Client;\n\n...\n\n  String uaString = \"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\";\n\n  Parser uaParser = new Parser();\n  Client c = uaParser.parse(uaString);\n\n  System.out.println(c.userAgent.family); // => \"Mobile Safari\"\n  System.out.println(c.userAgent.major);  // => \"5\"\n  System.out.println(c.userAgent.minor);  // => \"1\"\n\n  System.out.println(c.os.family);        // => \"iOS\"\n  System.out.println(c.os.major);         // => \"5\"\n  System.out.println(c.os.minor);         // => \"1\"\n\n  System.out.println(c.device.family);    // => \"iPhone\"\n  System.out.println(c.device.isMobile);  // => true\n  System.out.println(c.device.isSpider);  // => false\n```\n\n\nUsage :: php\n------------\n\n```php\nrequire(\"uaparser.php\");\n\n$ua = \"Mozilla/5.0 (Macintosh; Intel Ma...\";\n\n$parser = new UAParser;\n$result = $parser->parse($ua);\n\nprint $result->ua->family;                // Safari\nprint $result->ua->major;                 // 6\nprint $result->ua->minor;                 // 0\nprint $result->ua->patch;                 // 2\nprint $result->ua->toString;              // Safari 6.0.2\nprint $result->ua->toVersionString;       // 6.0.2\n\nprint $result->os->family;                // Mac OS X\nprint $result->os->major;                 // 10\nprint $result->os->minor;                 // 7\nprint $result->os->patch;                 // 5\nprint $result->os->patch_minor;           // [null]\nprint $result->os->toString;              // Mac OS X 10.7.5\nprint $result->os->toVersionString;       // 10.7.5\n\nprint $result->device->family;            // Other\n\nprint $result->toFullString;              // Safari 6.0.2/Mac OS X 10.7.5\nprint $result->uaOriginal;                // Mozilla/5.0 (Macintosh; Intel Ma...\n```\n\n[More information is available in the README](https://github.com/tobie/ua-parser/tree/master/php) in the PHP directory\n\nUsage :: D\n-------------\n```d\nimport UaParser;\n\nimport std.stdio;\n\nvoid main() {\n    auto agent = UaParser.parse(\"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\");\n    std.stdio.writeln(agent.browser.family); // Mobile Safari\n    std.stdio.writeln(agent.browser.major);  // 5\n    std.stdio.writeln(agent.browser.minor);  // 1\n    std.stdio.writeln(agent.browser.patch);  // 0\n    std.stdio.writeln(agent.browser.toString); // Mobile Safari 5.1.0\n    std.stdio.writeln(agent.browser.toVersionString); // 5.1.0\n\n    std.stdio.writeln(agent.os.family); // iOS\n    std.stdio.writeln(agent.os.major);  // 5\n    std.stdio.writeln(agent.os.minor);  // 1\n    std.stdio.writeln(agent.os.patch);  // 1\n    std.stdio.writeln(agent.os.toString); // iOS 5.1.1\n    std.stdio.writeln(agent.os.toVersionString); // 5.1.1\n\n    std.stdio.writeln(agent.toFullString); // Mobile Safari 5.1.0/iOS 5.1.1\n\n    std.stdio.writeln(agent.device.family); // iPhone\n    \n    std.stdio.writeln(agent.isMobile); // true\n    std.stdio.writeln(agent.isSpider); // false\n}\n```\n\nUsage :: C#\n-------------\n```csharp\nusing System;\n\nnamespace UAParser.ConsoleApp\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      String uaString = \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_5; en-us) AppleWebKit/533.18.1 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5\";\n\n      Parser uaParser = Parser.GetDefault();\n\n      ClientInfo c = uaParser.Parse(uaString);\n\n      Console.WriteLine(c.UserAgent);  //Safari 5.0.2\n      Console.WriteLine(c.OS); // Mac OS X 10.6.5\n      Console.WriteLine(c.Device); //\n\n      Console.ReadLine();\n    }\n  }\n}\n```\n\nUsage :: Perl\n-------------\n```perl\nuse HTTP::UA::Parser;\nmy $r = HTTP::UA::Parser->new();\n\nprint $r->ua->toString();         # -> \"Safari 5.0.1\"\nprint $r->ua->toVersionString();  # -> \"5.0.1\"\nprint $r->ua->family;             # -> \"Safari\"\nprint $r->ua->major;              # -> \"5\"\nprint $r->ua->minor;              # -> \"0\"\nprint $r->ua->patch;              # -> \"1\"\n    \nprint $r->os->toString();         # -> \"iOS 5.1\"\nprint $r->os->toVersionString();  # -> \"5.1\"\nprint $r->os->family              # -> \"iOS\"\nprint $r->os->major;              # -> \"5\"\nprint $r->os->minor;              # -> \"1\"\nprint $r->os->patch;              # -> undef\n    \nprint $r->device->family;         # -> \"iPhone\"\n\nMore information is available in the README in the perl directory\n```\n\nMaintainers\n-----------\n\n* C#:         Søren Enemærke ([enemaerke](https://github.com/enemaerke))  \n* D:          Shripad K ([shripadk](https://github.com/shripadk))  \n* Haskell:    Ozgun Ataman ([ozataman](https://github.com/ozataman))  \n* Java:       Steve Jiang ([sjiang](https://github.com/sjiang))  \n* JavaScript: Tobie Langel ([tobie](https://github.com/tobie))  \n* Perl:       Mamod Mehyar ([mamod](https://github.com/mamod))  \n* PHP:        Dave Olsen ([dmolsen](https://github.com/dmolsen))  \n* Python:     Lindsey Simon ([elsigh](https://github.com/elsigh))  \n\n* `regexes.yaml`: Lindsey Simon & Tobie Langel\n\nLicense\n-------\n\nThe data contained in `regexes.yaml` is Copyright 2009 Google Inc. and available under the [Apache License, Version 2.0][6].\n\nThe original python code is Copyright 2008 Google Inc. and is available under the [Apache License, Version 2.0][7].\n\nThe JS port is Copyright 2010 Tobie Langel and is available under [your choice of MIT or Apache Version 2.0 license][8].\n\nThe PHP port is Copyright (c) 2011-2012 Dave Olsen and is available under the [MIT license][9].\n\nThe Java port is Copyright (c) 2012 Twitter, Inc and is available under the [Apache License, Version 2.0][6].\n\nThe D port is Copyright (c) 2012 Shripad K and is available under the [MIT license][10]. \n\nThe C# port is Copyright (c) 2012 Søren Enemærke and is available under the [Apache License, Version 2.0][11].\n\nThe Perl port is Copyright (c) 2012 Mamod Mehyar and is available under the [Perl License, Version 5.10.1][12].\n\n[1]: http://nodejs.org\n[2]: http://www.browserscope.org\n[3]: http://code.google.com/p/ua-parser/\n[4]: http://stevesouders.com/\n[5]: https://raw.github.com/tobie/ua-parser/master/regexes.yaml\n[6]: http://www.apache.org/licenses/LICENSE-2.0\n[7]: https://raw.github.com/tobie/ua-parser/master/py/LICENSE\n[8]: https://raw.github.com/tobie/ua-parser/master/js/LICENSE\n[9]: https://raw.github.com/tobie/ua-parser/master/php/LICENSE\n[10]: https://raw.github.com/tobie/ua-parser/master/d/LICENSE\n[11]: https://raw.github.com/tobie/ua-parser/master/csharp/LICENSE\n[12]: http://dev.perl.org/licenses\n",
  "readmeFilename": "README.markdown",
  "_id": "ua-parser@0.3.1",
  "dist": {
    "shasum": "8a1f36c7867bfc429c9fcfa8542bd062f1775031"
  },
  "_from": "ua-parser@0.3.1"
}
